{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","User","name","tag","location","avatar","stats","className","s","profile","description","src","alt","stats__item","label","quantity","followers","views","likes","defaultProps","Statistics","title","statistics","map","id","percentage","style","backgroundColor","Math","floor","random","FriendListItem","isOnline","item","status","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eed84e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2oXCy\",\"description\":\"Profile_description__3RD3c\",\"avatar\":\"Profile_avatar__hNrrx\",\"name\":\"Profile_name__2pCs9\",\"tag\":\"Profile_tag__3xI6t\",\"location\":\"Profile_location__1bBKr\",\"stats\":\"Profile_stats__2Hbgh\",\"stats__item\":\"Profile_stats__item__lF5yn\",\"label\":\"Profile_label__2CfRf\",\"quantity\":\"Profile_quantity__1tRbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__3Nb7o\",\"transaction-title\":\"TransactionHistory_transaction-title__2RBW0\",\"transaction-body__line\":\"TransactionHistory_transaction-body__line__d5_e2\",\"transaction-body__column\":\"TransactionHistory_transaction-body__column__3Q0KY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__30iCd\",\"title\":\"Statistics_title__UHqMf\",\"stat-list\":\"Statistics_stat-list__3OIFA\",\"stat-list__item\":\"Statistics_stat-list__item__UKo44\",\"label\":\"Statistics_label__3UG8i\",\"percentage\":\"Statistics_percentage__2s5-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__10tAt\",\"status\":\"FriendListItem_status__1g9Kc\",\"avatar\":\"FriendListItem_avatar__1qDTs\",\"name\":\"FriendListItem_name__3gER4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__2Pmyd\"};","import PropTypes from 'prop-types'\r\nimport s from './Profile.module.css'\r\n\r\nexport default function User({ name, tag, location, avatar, stats }) {\r\n    return <div className={s.profile}>\r\n            <div className={s.description}>\r\n                <img\r\n                src={avatar}\r\n                alt={name}\r\n                className={s.avatar}\r\n                />\r\n                <p className={s.name}>{name}</p>\r\n                <p className={s.tag}>@{tag}</p>\r\n                <p className={s.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={s.stats}>\r\n                <li className={s.stats__item}>\r\n                    <span className={s.label}>Followers</span>\r\n                    <span className={s.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li className={s.stats__item}>\r\n                    <span className={s.label}>Views</span>\r\n                    <span className={s.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li className={s.stats__item}>\r\n                    <span className={s.label}>Likes</span>\r\n                    <span className={s.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n}\r\n\r\nUser.defaultProps = {\r\n    name: 'Unknown',\r\n    avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n}\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.objectOf(PropTypes.number),\r\n}","import PropTypes from 'prop-types'\r\nimport s from './Statistics.module.css'\r\n\r\nexport default function Statistics({ title, stats }) {\r\n    return <section className={s.statistics}>\r\n        {title && (<h2 className={s.title}>{title}</h2>)}\r\n\r\n        <ul className={s['stat-list']}>\r\n            {stats.map(({ id, label, percentage }) => \r\n                <li key={id} className={s['stat-list__item']} style={{backgroundColor: getBgColor()}}>\r\n                    <span className={s.label}>{label}</span>\r\n                    <span className={s.percentage}>{percentage}%</span>\r\n                </li>)\r\n            }\r\n        </ul>\r\n        </section>\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired ,\r\n    }))\r\n}\r\n\r\nfunction getBgColor() {\r\n  return `rgb(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)})`;\r\n}","import PropTypes from 'prop-types'\r\nimport s from './FriendListItem.module.css'\r\n\r\nexport default function FriendListItem({avatar, name, isOnline}) {\r\n   return <li className={s.item}>\r\n            <span className={s.status} style={{backgroundColor: isOnline? 'green' : 'red'}}></span>\r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n       <p className={s.name}>{ name }</p>\r\n        </li>\r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png'\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool,\r\n}","import s from './FriendList.module.css'\r\nimport FriendListItem from '../FriendListItem'\r\n\r\nexport default function FriendList({ friends }) {\r\n    return (<ul className={s[\"friend-list\"]}>\r\n        {friends.map(({ avatar, name, isOnline, id }) =>\r\n            <FriendListItem key={ id } avatar={avatar} name={name} isOnline={isOnline}/>)}\r\n    </ul>)\r\n}\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './TransactionHistory.module.css'\r\n\r\nexport default function TransactionHistory({ items }) {\r\n    return <table className={s['transaction-history']}>\r\n                <thead className={s['transaction-title']}>\r\n                    <tr className={s['transaction-title__line']}>\r\n                    <th className={s['transaction-title__column']}>Type</th>\r\n                    <th className={s['transaction-title__column']}>Amount</th>\r\n                    <th className={s['transaction-title__column']}>Currency</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className={s['transaction-body']}>\r\n            {items.map(({id, type ='Unknown Type', amount, currency}) => \r\n                        <tr key={id} className={s['transaction-body__line']}>\r\n                            <td className={s['transaction-body__column']}>{type}</td>\r\n                            <td className={s['transaction-body__column']}>{amount}</td>\r\n                            <td className={s['transaction-body__column']}>{currency}</td>\r\n                        </tr>\r\n            )}\r\n            </tbody>\r\n    </table>\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string,\r\n        amount: PropTypes.string,\r\n        currency: PropTypes.string,\r\n    }))\r\n}","import './App.css';\nimport user from './data/user.json'\nimport statisticalData from './data/statistical-data.json'\nimport friends from './data/friend-list.json'\nimport transactions from './data/transaction-history.json'\n\nimport Profile from './components/Profile'\nimport Statistics from './components/Statistics'\nimport FriendList from './components/FriendList'\nimport TransactionHistory from './components/TransactionHistory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}